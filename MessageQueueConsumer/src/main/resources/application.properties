server.port=10002
spring.application.name=Order Management Consumer Portal
server.servlet.context-path=/order-management-consumer-portal/v1

# rabbit-mq
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=password

# h2-db
#spring.h2.console.enabled=true
#spring.sql.init.platform=h2
#spring.jpa.defer-datasource-initialization=true
#spring.datasource.url=jdbc:h2:mem:test
#spring.datasource.username=sa
#spring.datasource.password=
#server.port=8083
#spring.jpa.hibernate.ddl-auto=create-drop


# postgresql
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/messagequeue
spring.datasource.username=test
spring.datasource.password=12345sp

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=none

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy


# rabbit-mq
user.rabbitmq.queue = user_queue

user.rabbitmq.direct_exchange=user_direct_exchange
user.rabbitmq.topic_exchange=user_topic_exchange
user.rabbitmq.fanout_exchange=user_fanout_exchange

user.rabbitmq.routing_key = user_routing_key


# constants
app.message = Message is successfully sent
